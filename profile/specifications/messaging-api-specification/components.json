{
  "components" : {
    "schemas" : {
      "PayloadBody" : {
        "type" : "object",
        "properties" : {
          "payloads" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Array of messaging payloads",
              "format" : "binary"
            }
          }
        },
        "description" : "Object holds multipart/mixed array of payloads"
      },
      "SignalMessage" : {
        "title" : "A Signal message which extends Problem object (RFC 7807) defined by the ISA² IPS REST API Core Profile",
        "required" : [ "instance", "status", "title", "type" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "A short summary of the problem type, written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
            "example" : "Service Unavailable"
          },
          "type" : {
            "type" : "string",
            "description" : "An URI reference that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g. using HTML)",
            "format" : "uri",
            "default" : "about:blank"
          },
          "status" : {
            "maximum" : 600,
            "exclusiveMaximum" : true,
            "minimum" : 200,
            "type" : "integer",
            "description" : "The HTTP status code generated by the origin server for this occurrence of the ",
            "format" : "int32",
            "example" : 503
          },
          "detail" : {
            "type" : "string",
            "description" : "A human-readable explanation specific to this occurrence of the problem",
            "format" : "string"
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI reference that identifies the specific occurrence of the  It may or may not yield further information if dereferenced.",
            "format" : "uri-reference"
          },
          "digest" : {
            "type" : "string",
            "description" : "The digest of the received message using the notation proposed in 'Digest Header' (https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-digest-headers)",
            "format" : "string",
            "example" : "sha-256=4REjxQ4yrqUVicfSKYNO/cF9zNj5ANbzgDZt3/h3Qxo="
          }
        },
        "description" : "A Signal message which extends Problem object (RFC 7807) defined by the ISA² IPS REST API Core Profile",
        "$id" : "https://joinup.ec.europa.eu/collection/api4dt/solution/.../messaging.schema.json",
        "$schema" : "https://json-schema.org/draft/2020-12/schema"
      },
      "MessageReferenceList" : {
        "title" : "A Message Reference object defined by the ISA² IPS REST API Messaging API Specification",
        "required" : [ "messageReferenceList" ],
        "type" : "object",
        "properties" : {
          "messageReferenceList" : {
            "type" : "array",
            "description" : "List of message references.",
            "items" : {
              "$ref" : "#/components/schemas/MessageReference"
            }
          },
          "count" : {
            "type" : "integer",
            "description" : "Count of all messages",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "description" : "limit number of references.",
            "format" : "int32"
          },
          "offset" : {
            "type" : "integer",
            "description" : "offset of references.",
            "format" : "int32"
          }
        },
        "description" : "A Message Reference object to be used when multiple messages could be retrieved from an API operation",
        "$id" : "https://joinup.ec.europa.eu/collection/api4dt/solution/.../message-reference-schema-list.json",
        "$schema" : "https://json-schema.org/draft/2020-12/schema"
      },
      "MessageReference" : {
        "title" : "A Message Reference object defined by the ISA² IPS REST API Messaging API Specification",
        "required" : [ "action", "messageId", "service" ],
        "type" : "object",
        "properties" : {
          "messageId" : {
            "type" : "string",
            "description" : "The unique identifier of the message."
          },
          "service" : {
            "type" : "string",
            "description" : "A representation of the service the message is submitted to."
          },
          "action" : {
            "type" : "string",
            "description" : "A representation of the action related to the service the message is submitted to."
          },
          "href" : {
            "type" : "string",
            "description" : "The direct link for getting the specific message",
            "format" : "uri-reference"
          }
        },
        "description" : "A Message Reference object to be used when multiple messages could be retrieved from an API operation",
        "$id" : "https://joinup.ec.europa.eu/collection/api4dt/solution/.../message-reference-schema.json",
        "$schema" : "https://json-schema.org/draft/2020-12/schema"
      }
    },
    "parameters" : {
      "Original-Sender" : {
        "name" : "Original-Sender",
        "in" : "header",
        "description" : "The Original Sender represents the authenticated entity acting as the user that sends the message using the client. Following the API Core Profile, the original sender MUST be represented with an OpenID Connect token, in the form of Compact JWT Token.",
        "schema" : {
          "$ref" : "../api-core-profile/components.json#/schemas/jws-compact-detached"
        },
        "example" : "eyJhbGciOiJIUzINiIsnRI6IkpXVCJ9.eyJzdWIiOiIxM0NTY3ODkwIiwibmIiwiaWF0IoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMePOk6yJV_adQssw5c"
      },
      "Final-Recipient" : {
        "name" : "Final-Recipient",
        "in" : "header",
        "description" : "The Final Recipient is the entity for whom the message is sent. Can be a single identifier or a set of identifiers, as described in the Recipient Addressing Schemes section of the specification. The representation of the final recipient is out of scope of the current specification.",
        "schema" : {
          "type" : "string"
        },
        "example" : "9999::333222111"
      },
      "Timestamp" : {
        "name" : "Timestamp",
        "in" : "header",
        "description" : "The Timestamp is the exact date and time at which the message was sent. It is provided by the client and verified by the server.",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        },
        "example" : "2021-06-17T08:30:00Z"
      },
      "messageId" : {
        "name" : "messageId",
        "in" : "path",
        "description" : "The MessageId is the unique identifier of the message submitted. It MUST be defined by the client. It is used for reliable messaging for guaranteeing the at-most-once message submission (no duplicate message-ids are allowed by the server implementing the API).",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "example" : "dde12f67-c391-4851-8fa2-c07dd8532efd"
      },
      "service" : {
        "name" : "service",
        "in" : "path",
        "description" : "The Service metadata defines the service under which the message should be sent. It is combined with the Action metadata to provide a complete domain-level message target. The service metadata MUST be a URL Safe string.",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "example" : "dsd-service"
      },
      "action" : {
        "name" : "action",
        "in" : "path",
        "description" : "The Action metadata defines the action of the service under which the message should be sent. It is combined with the Service metadata to provide a complete domain-level target of the message. The action metadata MUST be a URL Safe string.",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "example" : "dsd-action"
      },
      "Signal-Webhook" : {
        "name" : "Signal-Webhook",
        "in" : "header",
        "description" : "The Signal-Webhook provides the callback URL that the server MUST use for sending a signal back. It is required when implementing the \"Send Message with Asynchronous Response – Push and Webhook Pull\" exchange pattern.",
        "schema" : {
          "type" : "string",
          "format" : "uri"
        }
      },
      "Response-Webhook" : {
        "name" : "Response-Webhook",
        "in" : "header",
        "description" : "The Response-Webhook provides the callback URL that the server MUST use for sending a response. It is required when implementing the \"Send Message with Asynchronous Response – Push and Webhook Push\" exchange pattern.",
        "schema" : {
          "type" : "string",
          "format" : "uri"
        }
      },
      "rMessageId" : {
        "name" : "rMessageId",
        "in" : "path",
        "description" : "The identifier of the response message being submitted. It MUST be generated by the client submitting the response message.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "rService" : {
        "name" : "rService",
        "in" : "path",
        "description" : "The Service metadata defines the service under which the message should be sent. It is combined with the Action metadata to provide a complete domain-level message target. The service metadata MUST be a URL Safe string.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "rAction" : {
        "name" : "rAction",
        "in" : "path",
        "description" : "The Action metadata defines the action of the service under which the message should be sent. It is combined with the Service metadata to provide a complete domain-level target of the message. The action metadata MUST be a URL Safe string.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "headers" : {
      "Original-Sender" : {
        "description" : "The Original Sender represents the authenticated entity acting as the user that sends the message using the client. Following the API Core Profile, the original sender MUST be represented with an OpenID Connect token, in the form of Compact JWT Token.",
        "schema" : {
          "$ref" : "../api-core-profile/components.json#/schemas/jws-compact-detached"
        }
      },
      "Final-Recipient" : {
        "description" : "The Final Recipient is the entity for whom the message is sent. Can be a single identifier or a set of identifiers, as described in the Recipient Addressing Schemes section of the specification. The representation of the final recipient is out of scope of the current specification.",
        "schema" : {
          "type" : "string"
        }
      },
      "Timestamp" : {
        "description" : "The Timestamp is the exact date and time at which the message was sent. It is provided by the client and verified by the server.",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    }
  }
}